name: Deploy to EKS

on:
  push:
    branches:
      - main

env:

  AWS_REGION : "us-east-1" #Change to reflect your Region

# Permission can be added at job level or workflow level    
permissions:
      id-token: write   # This is required for requesting the JWT
      contents: read    # This is required for actions/checkout

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Git clone the repository
        uses: actions/checkout@v3
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: arn:aws:iam::384206995652:role/eksmainrole #change to reflect your IAM roleâ€™s ARN
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ env.AWS_REGION }}
      # Hello from AWS: WhoAmI
      - name: Sts GetCallerIdentity
        run: |
          aws sts get-caller-identity

      - name: Install CDK
        run: |
          npm install -g aws-cdk

      - name: Deploy/Update EKS cluster using CDK
        run: |
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
          cdk deploy --all --require-approval never

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: "true"

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: dbecrrepo # Change to your repository name
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Set up Kubeconfig
        run: |
          aws eks update-kubeconfig --region us-east-1 --name 'dbekscluster'

      - name: Deploy to EKS
        run: |
          # Ensure you're in the repository root
          cd $GITHUB_WORKSPACE
          # Determine whether you already have kubectl installed
          kubectl version --client

          # Replace the image in the k8s-deployment.yml with the new ECR image
          sed -i 's#your-ecr-url/your-repo-name:latest#'"$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"'#' k8s-deployment.yaml
          # Apply the modified deployment
          kubectl apply -f k8s-deployment.yaml
