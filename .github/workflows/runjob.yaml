name: Deploy to EKS

on:
  push:
    branches:
      - main

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1 # or your AWS region

      - name: Install CDK
        run: |
          npm install -g aws-cdk

      - name: Deploy/Update EKS cluster using CDK
        run: |
          npm install
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
          cdk deploy --all

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: "true"

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: dbecrrepo # Change to your repository name
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Set up Kubeconfig
        run: |
          aws eks update-kubeconfig --region us-east-1 --name 'dbekscluster'

      - name: Deploy to EKS
        run: |
          # Replace the image in the k8s-deployment.yml with the new ECR image
          sed -i 's#your-ecr-url/your-repo-name:latest#'"$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"'#' k8s-deployment.yml
          # Apply the modified deployment
          kubectl apply -f k8s-deployment.yml
